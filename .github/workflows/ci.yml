name: CI - Test & Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install additional testing/linting packages
        pip install black isort pytest-cov
    
    - name: Run Black (code formatting check)
      run: |
        black --check --diff .
    
    - name: Run isort (import sorting check)  
      run: |
        isort --check-only --diff .
    
    - name: Set up environment variables for tests
      run: |
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci-$(openssl rand -hex 16)" >> $GITHUB_ENV

        # Database settings
        echo "DB_NAME=test_db" >> $GITHUB_ENV
        echo "DB_USER=test_user" >> $GITHUB_ENV
        echo "DB_PASSWORD=test_password" >> $GITHUB_ENV
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV

        # Redis Settings
        echo "REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "REDIS_PORT=6379" >> $GITHUB_ENV

        # Security settings
        echo "JWT_SECRET_KEY=test-jwt-secret-$(openssl rand -hex 16)" >> $GITHUB_ENV
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> $GITHUB_ENV
        echo "CORS_ALLOWED_ORIGINS=http://localhost:8000" >> $GITHUB_ENV

        # Email settings
        echo "EMAIL_HOST=localhost" >> $GITHUB_ENV
        echo "EMAIL_PORT=1025" >> $GITHUB_ENV
        echo "EMAIL_USE_TLS=False" >> $GITHUB_ENV
        echo "EMAIL_HOST_USER=" >> $GITHUB_ENV
        echo "EMAIL_HOST_PASSWORD=" >> $GITHUB_ENV
    
    - name: Run tests with coverage
      run: |
        python scripts/run_tests.py --coverage
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: success()
      with:
        fail_ci_if_error: false
